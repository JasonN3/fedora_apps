on:
  workflow_call:
    inputs:
      next_step:
        required: true
        type: string
jobs:
  load_vars:
    name: Load Variables
    uses: ./.github/workflows/vars.yml

  prev_step:
    name: Get previous step
    runs-on: ubuntu-latest
    needs:
      - load_vars
    outputs:
      step: ${{ steps.get_prev.outputs.step }}
    steps:
      - name: Get previous step
        id: get_prev
        run: |
          previous_step=$(echo '${{ needs.load_vars.outputs.LIFECYCLE }}' | jq -r '.[ index("${{ inputs.next_step }}") - 1 ]')
          echo "step=${previous_step}" >> "$GITHUB_OUTPUT"

  merge:
    name: Merge existing PR
    runs-on: ubuntu-latest
    outputs:
      pr: ${{ steps.find_pr.outputs.pending_updates }}
    steps:
      - name: Find PR
        id: find_pr
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curr_month=$(date '+%Y-%m (%B %Y)')
          pending_updates=$(gh pr list -l lifecycle --base ${{ inputs.next_step }} --draft=false --json number,title --jq ".[] | select(.title == \"Monthly Updates - ${curr_month}\").number")
          num_updates="$(echo "${pending_updates}" | wc -w)"
          
          # Multiple PRs were found. Something went wrong
          if [[ ${num_updates} -gt 1 ]]
          then
            echo "More than 1 PR was found. Cancelling changes."
            exit 1
          fi

          if [[ -n "${pending_updates}" && $(gh pr view ${pending_updates} --json closed --jq '.closed') == "true" ]]
          then
            echo "PR is already closed. Cancelling changes"
            exit 2
          fi

          echo "pending_updates=${pending_updates}" >> "$GITHUB_OUTPUT"
          
      - name: Merge PR
        if: env.pending_updates != ""
        run: |
          echo "Merging PR ${{ env.pending_updates }}"
          gh pr merge -s ${{ env.pending_updates }}
  
  rebuild:
    if: needs.merge.outputs.pr == "" && needs.prev_step.outputs.step == "main"
    needs:
      - load_vars
      - merge
    name: Rebuild Image
    uses: ./.github/workflows/build-container.yaml
    with:
      ref: main

  promote:
    name: Promote to next step
    if: always()
    runs-on: ubuntu-latest
    needs:
      - load_vars
      - merge
      - rebuild
    strategy:
      fail-fast: false
      matrix:
        app: ${{ fromJson(needs.load_vars.outputs.APPS) }}
    steps:
      - name: Fail if merge or rebuild failed
        if: ${{ needs.merge.result == 'failure' || needs.rebuild.result == 'failure' }}
        run: |
          exit 1
      - name: Create manifest
        id: manifest
        run: |
          image=$(echo "ghcr.io/${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          podman manifest create ${image}:${{ inputs.next_step }}-${{ matrix.app }}
          podman manifest add ${image}:${{ needs.prev_step.outputs.step }}-${{ matrix.app }}
          echo "tag=${image}:${{ inputs.next_step }}-${{ matrix.app }}" >> "$GITHUB_OUTPUT"

      - name: Push manifest
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ghcr.io/${{ github.repository }}
          tags: ${{ steps.manifest.outputs.tag }}
          username: ${{ github.actor }}
          password: ${{ github.token }}

